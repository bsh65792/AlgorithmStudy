#include <iostream>


using namespace std;

int n;
int number[12] = { 0, };
int operNumber[11] = { 0, };
int oper[4] = { 0, };

int largestNumber = -1000000000;
int smallestNumber = 1000000000;

void calculate() {
	int numberTemp[11];
	operNumber[0] = 2;

	for (int i = 0; i <= n; i++) {
		numberTemp[i] = number[i];
	}

	for (int i = 1; i <= n; i++) {
		if (operNumber[i - 1] == 0) {	//덧셈
			numberTemp[i] += numberTemp[i - 1];
			//printf("+ ");
		}
		else if (operNumber[i - 1] == 1) {
			numberTemp[i] = numberTemp[i - 1] - numberTemp[i];
			//printf("- ");
		}
		else if (operNumber[i - 1] == 2) {
			numberTemp[i] = numberTemp[i - 1] * numberTemp[i];
			//printf("x ");
		}
		else if (operNumber[i - 1] == 3) {
			numberTemp[i] = numberTemp[i - 1] / numberTemp[i];
			//printf("/ ");
		}
	}

	

	if (numberTemp[n] > largestNumber) {
		largestNumber = numberTemp[n];
		//printf(" largestNumber check!!!");
	}
		
	if (numberTemp[n] < smallestNumber) {
		smallestNumber = numberTemp[n];
		//printf(" smallestNumber check!!!");
	}
		

	//printf("\n");
}


void dfs(int depth) {

	if (depth >= n - 1) {
		calculate();
		return;
	}

	for (int i = 0; i < 4; i++) {
		if (oper[i] >= 1) {
			oper[i]--;
			operNumber[depth + 1] = i;
			dfs(depth + 1);
			oper[i]++;
		}
	}

}



int main() {
	
	cin >> n;
	number[0] = 1;

	for (int i = 1; i <= n; i++) {
		cin >> number[i];
	}
	
	for (int i = 0; i < 4; i++) {
		cin >> oper[i];
	}

	dfs(0);

	printf("%d\n%d", largestNumber, smallestNumber);


	return 0;
}
